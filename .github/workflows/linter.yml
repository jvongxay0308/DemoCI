name: Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  security-events: write
  contents: read

jobs:
  go:
    name: Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: "1.25"
      - name: Display Go version
        run: go version
      - name: Run Gofmt
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Gofmt errors found:"
            gofmt -l .
            echo "Please run 'gofmt -w .' to fix the errors."
            exit 1
          fi
      - name: Run Govet
        run: go vet -all ./...
      - name: Run Misspell
        run: |
          [ ! -f misspell ] && go install github.com/client9/misspell/cmd/misspell@latest
          misspell -error ./...

  gosec:
    name: Gosec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run Gosec Security Scanner
        uses: securego/gosec@v2.22.8
        with:
          args: "-nosec=true -no-fail -fmt sarif -out gosec.sarif ./..."
      - name: Upload Gosec SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec.sarif

  govuln:
    name: Govuln
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run Govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: "1.25"
          go-package: ./...
          output-format: sarif
          output-file: govulncheck.sarif
      - name: Upload Govulncheck SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: govulncheck.sarif

  staticcheck:
    name: Staticcheck
    runs-on: ubuntu-latest
    steps:
      # - name: Staticcheck
      #   run: |
      #     [ ! -f staticcheck ] && go install honnef.co/go/tools/cmd/staticcheck@latest
      #     staticcheck ./...
      - uses: actions/checkout@v5
      - name: Run Staticcheck
        uses: dominikh/staticcheck-action@v1
        with:
          version: latest # Specify a specific version or 'latest'
          cache-key: ${{ runner.os }}-staticcheck-${{ hashFiles('**/*.go') }}

  golangci-lint:
    name: GolangCI-Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest # Specify a specific version or 'latest'
          args: --timeout=5m # Example: adjust timeout if needed
